// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SalesForce.TestFeature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("07 - Create_a_Case_")]
    [NUnit.Framework.CategoryAttribute("Cases")]
    public partial class _07_Create_A_Case_Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreateACase.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "07 - Create_a_Case_", "\tIn order to manage enquiries and other requirements \r\n\tAs a Helpdesk Agent or an" +
                    " employee in other parts of CCS entity\r\n\tI would like to be given a mechanism to" +
                    " create cases", ProgrammingLanguage.CSharp, new string[] {
                        "Cases"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
 testRunner.Given("I am on Cases page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01 Create Enquiry Case (CCS Admin User)")]
        [NUnit.Framework.CategoryAttribute("RegressionTest")]
        [NUnit.Framework.TestCaseAttribute("Enquiry", "Supplier001", "Test001 Supplier", "--None--", "Open", "Green", "Level 1", "Email", "Enquiry Case", "Enquiry Case Test001", new string[0])]
        public virtual void _01CreateEnquiryCaseCCSAdminUser(string caseType, string orgName, string contactName, string team, string status, string priority, string triageLevel, string caseOrigin, string caseSubject, string description, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 Create Enquiry Case (CCS Admin User)", @__tags);
#line 11
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 12
 testRunner.When("I click on New button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.Then("I should be navigated to Case type Selection page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
 testRunner.When(string.Format("I select case Type as {0} and continue", caseType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then("I should be presented with Case Edit screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
 testRunner.When(string.Format("I populate mandatory Enquiry case information {0}, {1}, {2}, {3}, {4}, {5}, {6}, " +
                        "{7}, {8} for the case and Save the record", orgName, contactName, team, status, priority, triageLevel, caseOrigin, caseSubject, description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("a Case record be created successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02 Create Tech Support Case (CCS Admin User)")]
        [NUnit.Framework.TestCaseAttribute("Tech Support", "Test001 Customer", "Customer001", "Technology Support", "Email", "Triage", "Problem", "Open", "Green", "SPAM", "AutoTest Tech Support001", "Tech Support Case with Email", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Tech Support", "Test002 Customer", "Customer002", "Applications & Infrastructure", "Phone", "Triage", "Request", "Open", "Green", "SalesForce", "AutoTest Tech Support002", "Tech Support Case with Email", new string[0])]
        public virtual void _02CreateTechSupportCaseCCSAdminUser(string caseType, string contactName, string orgName, string technologyTeam, string caseOrigin, string workflow, string category, string status, string priority, string supportClassification, string subject, string description, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 Create Tech Support Case (CCS Admin User)", exampleTags);
#line 23
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 24
 testRunner.When("I click on New button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("I should be navigated to Case type Selection page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
 testRunner.When(string.Format("I select case Type as {0} and continue", caseType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.Then("I should be presented with Case Edit screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
 testRunner.When(string.Format("I populate mandatory Tech Support Case information {0}, {1}, {2}, {3}, {4}, {5}, " +
                        "{6}, {7}, {8}, {9}, {10} for the case and Save the record", contactName, orgName, technologyTeam, caseOrigin, workflow, category, status, priority, supportClassification, subject, description), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then("a Case record be created successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03 Create a Procurement Case (CCS Admin User)")]
        [NUnit.Framework.TestCaseAttribute("Procurement", "Customer001", "Test0001", "In Progress", "Below £100k", "Important", "Basic", "Buying Team", "Test Marketing", "Email", "Test Procurement 001", "Test Procurement 001", "No", "No", "Yes", "No", "No", "Green", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Procurement", "Customer002", "Test0002", "In Progress", "Below £100k", "Important", "Complex", "Buying Team", "Test Marketing", "Email", "Test Procurement 002", "Test Procurement 001", "No", "No", "Yes", "No", "No", "Green", new string[0])]
        public virtual void _03CreateAProcurementCaseCCSAdminUser(
                    string caseType, 
                    string orgName, 
                    string procReference, 
                    string status, 
                    string value, 
                    string straImpToCustomer, 
                    string sourComplexity, 
                    string ccsTeam, 
                    string cASCategory, 
                    string caseOrigin, 
                    string subject, 
                    string description, 
                    string coErgAppReqlist, 
                    string dwpCARList, 
                    string olncAppReqList, 
                    string modrcaAppReqList, 
                    string dwpmcatAppReqList, 
                    string priority, 
                    string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 Create a Procurement Case (CCS Admin User)", exampleTags);
#line 35
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 36
 testRunner.When("I click on New button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.Then("I should be navigated to Case type Selection page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 38
 testRunner.When(string.Format("I select case Type as {0} and continue", caseType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.Then("I should be presented with Case Edit screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 40
 testRunner.When(string.Format("I populate mandatory Procurement Case information {0}, {1}, {2}, {3}, {4}, {5}, {" +
                        "6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16} for the case and Sav" +
                        "e the record", orgName, procReference, status, value, straImpToCustomer, sourComplexity, ccsTeam, cASCategory, caseOrigin, subject, description, coErgAppReqlist, dwpCARList, olncAppReqList, modrcaAppReqList, dwpmcatAppReqList, priority), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.Then("a Case record be created successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
