// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SalesForce.TestFeature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("04 - Create a Contact")]
    public partial class _04_CreateAContactFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreateContact.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "04 - Create a Contact", "\tAs a CCS staff I would \r\n\tI would like to create contact details\r\n\tSo that the c" +
                    "ontact details can be associated for various operations", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
    testRunner.Given("I am on Contact Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.When("I click on New button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("I should be directed to Contact Edit Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a contact with all fields populated")]
        [NUnit.Framework.CategoryAttribute("RegressionTest")]
        [NUnit.Framework.TestCaseAttribute("Mr.", "Test012", "Contact", "Help Desk Agent", "CSC", "N", "General Contact", "", "0001", "Active", "01225895988", "0102", "07941373315", "Test012Contact@mailinator.com", "Test010Contact@mailinator.com", "N", "Customer005", "England", "9 Queen Street", "Bristol", "Avon", "BS158BA", "", "A Test", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Mr.", "Test013", "Contact", "Help Desk Agent", "CSC", "N", "General Contact", "", "0001", "Active", "01225895988", "0101", "07941373315", "", "Test010Contact@mailinator.com", "Y", "Customer005", "England", "7 Queen Street", "Bristol", "Avon", "BS158BA", "", "A Test", new string[0])]
        [NUnit.Framework.TestCaseAttribute("Mr.", "Test014", "Contact", "", "", "N", "", "", "", "Active", "01225895988", "0105", "", "", "", "N", "Customer005", "", "", "", "", "", "", "", new string[0])]
        public virtual void CreateAContactWithAllFieldsPopulated(
                    string salutation, 
                    string firstName, 
                    string lastName, 
                    string jobTitle, 
                    string department, 
                    string ccsEmailYN, 
                    string contactType, 
                    string reportsTo, 
                    string mktgCampaignRef, 
                    string status, 
                    string telephone, 
                    string extension, 
                    string mobile, 
                    string email, 
                    string addnlemail, 
                    string usrResearchPartYN, 
                    string orgName, 
                    string country, 
                    string addressLine, 
                    string townCity, 
                    string county, 
                    string postcode, 
                    string origin, 
                    string notes, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "RegressionTest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a contact with all fields populated", @__tags);
#line 11
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 12
 testRunner.When("I enter new contact details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.And("click on Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.Then("contact record should be created successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
